generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model coffee_beans {
  id              Int            @id @default(autoincrement())
  name            String
  roast           String?
  price           Decimal?       @db.Decimal(5, 2)
  manufacturer_id Int?
  manufacturers   manufacturers? @relation(fields: [manufacturer_id], references: [id], onUpdate: NoAction)
  purchases       purchases[]
  ratings         ratings[]
}

model manufacturers {
  id           Int            @id @default(autoincrement())
  name         String
  country      String?
  coffee_beans coffee_beans[]
}

model purchases {
  id             Int           @id @default(autoincrement())
  coffee_bean_id Int?
  place_bought   String?
  date_bought    DateTime?     @db.Date
  coffee_beans   coffee_beans? @relation(fields: [coffee_bean_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model ratings {
  id             Int           @id @default(autoincrement())
  coffee_bean_id Int?
  user_id        Int?
  rating         Int?
  review         String?
  date_rated     DateTime?     @db.Date
  coffee_beans   coffee_beans? @relation(fields: [coffee_bean_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users          users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id       Int       @id @default(autoincrement())
  username String
  email    String?
  ratings  ratings[]
}
